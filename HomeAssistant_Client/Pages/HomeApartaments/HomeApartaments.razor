@page "/home/apartaments"
@inject ILocalStorageService localStorage
@inject IJSRuntime jsRuntime
@inject IHomeApService homeApService

@if (Apartaments != null && Apartaments.Any())
{
    <EditForm Model="HomeModel" OnValidSubmit="SaveBookingInfo" class="bg-light">

        <div class="pt-3 pb-2 px-5 mx-1 mx-md-0 bg-secondary">
            <DataAnnotationsValidator />
            <div class="row px-3 mx-3 text-white">
                <div class="col-6 col-md-4">
                    <div class="form-group" style = "margin-left:10px;">
                        <label class=" ">Check in Date</label>
                        <InputDate @bind-Value="HomeModel.StartDate" class="form-control" />
                    </div>
                </div>
                <div class="col-6 col-md-4">
                    <div class="form-group" style = "margin-left:10px;">
                        <label class=" ">Check Out Date</label>
                        <input @bind="HomeModel.EndDate" disabled="disabled" readonly="readonly" type="date" class="form-control" />
                    </div>
                </div>
                <div class=" col-4 col-md-2">
                    <div class="form-group" style = "margin-left:10px;margin-right:10px">
                        <label class=" ">No. of nights</label>
                        <select class="form-control" @bind="HomeModel.NoOfNights">
                            <option value="Select" selected disabled="disabled">(Select No. Of Nights)</option>
                            @for (var i = 1; i <= 10; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="col-8 col-md-2">
                    <div class="form-group pb-3" style="margin-top: 1.5rem !important;">
                        @if (isProcessing)
                        {
                            <button class="btn btn-success btn-block form-control"><i class="fa fa-spin fa-spinner"></i>Processing...</button>
                        }
                        else
                        {
                            <input type="submit" value="Update" class="btn btn-success btn-block text-black" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
    <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

        @foreach (var apartament in Apartaments)
        {

            <div class="row p-2 my-3 " style="border-radius:20px;">
                <div class="col-12 col-lg-3 col-md-4">
                    <div id="carouselExampleIndicators_@apartament.Id" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-interval="false">
                        <ol class="carousel-indicators">
                            @{
                                int imageIndex = 0;
                                int innerImageIndex = 0;
                            }
                        </ol>
                        <div class="carousel-inner">
                            @foreach (var image in apartament.HomeApImages)
                            {
                                if (innerImageIndex == 0)
                                {
                                    <div class="carousel-item active">
                                        <img class="d-block w-100" style="border-radius:13px;" src="@image.ApartamentImageURL" alt="First slide">
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img class="d-block w-100" style="border-radius:13px;" src="@image.ApartamentImageURL" alt="First slide">
                                    </div>
                                }

                                innerImageIndex++;
                            }
                        </div>
                    </div>
                </div>
                <div class="col-12 col-lg-9 col-md-8">
                    <div class="row pt-3">
                        <div class="col-12 col-lg-8">
                            <p class="card-title  " style="font-size:xx-large">@apartament.Name</p>
                            <p class="card-text">
                                @((MarkupString)apartament.Details)
                            </p>
                        </div>
                        <div class="col-12 col-lg-4">
                            <div class="row pb-3 pt-2">
                                <div class="col-12 col-lg-11 offset-lg-1">
                                    <span class="float-right">
                                        <h4 class="  font-weight-bold pt-4 text-black">
                                            
                                            <span style="border-bottom:1px solid #ff6a00">
                                               AUD: $@apartament.Cost
                                            </span>
                                        </h4>
                                        <span class="float-right">Max Occupancy : @apartament.Occupancy adults </span><br />
                                        <span class="float-right pt-1">Villa Size : @apartament.SqFt sqft</span><br />
                                        
                                        @if(apartament.StayLength > 1)
                                        {
                                            <span class="float-right mb-3">Cost for  @apartament.StayLength nights</span> <br/>
                                        }
                                        else
                                        {
                                           <span class="float-right mb-3">Cost for  @apartament.StayLength night</span> <br/>
                                        }

                                    </span>
                                    @if (apartament.IsBooked)
                                    {
                                        <button disabled class="btn btn-secondary btn-block">Sold Out</button>
                                    }
                                    else
                                    {

                                        <a href="@($"home/apartament-details/{apartament.Id}")" class="btn btn-success btn-block mt-3">Book @apartament.Name</a>
                                    }
                                </div>
                            </div>
                            <div class="row ">
                                <div class="col-12 pb-5">
                                    
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
}
else
{
    <div class="spinner"></div>

}

@code {
    //initialise a new homemodel
    private HomeVM HomeModel { get; set; } = new HomeVM();
    public IEnumerable<HomeApDTO> Apartaments { get; set; } = new List<HomeApDTO>();

    private bool isProcessing { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            if (await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBooking) != null)
            {
                //populate the new homemodel with the information from the homemodel stored in local storage

                HomeModel = await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBooking);

            }
            else
            {
                HomeModel.NoOfNights = 1;
            }
            await LoadApartaments();
        }
        catch (Exception e)
        {
            throw e;
        }
    }

    private async Task LoadApartaments()
    {
        Apartaments = await homeApService.GetHomeAps(HomeModel.StartDate.ToString("dd/MM/yyyy"), HomeModel.EndDate.ToString("dd/MM/yyyy"));

        foreach(var apartament in Apartaments)
        {
            apartament.Cost = apartament.Rate * HomeModel.NoOfNights;
            apartament.StayLength = HomeModel.NoOfNights;
        }
    }

    //UPDATE
    private async Task SaveBookingInfo()
    {
        isProcessing = true;
        // Get the end date, get the start date
        HomeModel.EndDate = HomeModel.StartDate.AddDays(HomeModel.NoOfNights);
        // update the local storage with dates
        await localStorage.SetItemAsync(SD.Local_InitialBooking, HomeModel);
        //Retrieve from database, update with newly changed dates
        await LoadApartaments();

        isProcessing = false;
    }
}